name: Java CI para executar testes e salvar report no GitHub Pages
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 12 * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4

      - name: Configurar JDK 17 Temurin
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build do projeto
        run: mvn clean install -DskipTests

      - name: Salvar workspace
        uses: actions/upload-artifact@v4
        with:
          name: workspace
          path: .


  Health-Check:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Baixar workspace
        uses: actions/download-artifact@v4
        with:
          name: workspace
          path: .

      - name: Executar testes de HealthCheck
        run: mvn test -Dgroups=HealthCheck
        continue-on-error: true

      - name: Coletar resultados do Allure
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-healthCheck
          path: target/allure-results

  test-contrato:
    runs-on: ubuntu-latest
    needs: Health-Check
    steps:
      - name: Baixar workspace
        uses: actions/download-artifact@v4
        with:
          name: workspace
          path: .

      - name: Executar testes de Contrato
        run: mvn test -Dgroups=Contrato
        continue-on-error: true

      - name: Coletar resultados do Allure
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-contrato
          path: target/allure-results

  test-funcional:
    runs-on: ubuntu-latest
    needs: test-contrato
    steps:
      - name: Baixar workspace
        uses: actions/download-artifact@v4
        with:
          name: workspace
          path: .

      - name: Executar testes Funcionais
        run: mvn test -Dgroups=Funcional
        continue-on-error: true

      - name: Coletar resultados do Allure
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-funcional
          path: target/allure-results

  generate-allure-report:
    runs-on: ubuntu-latest
    needs: test-funcional
    if: always()
    permissions:
      contents: write
    steps:
      - name: Checkout do reposit√≥rio
        uses: actions/checkout@v4

      - name: Baixar resultados do Allure - healthCheck
        uses: actions/download-artifact@v4
        with:
          name: allure-results-healthCheck
          path: target/allure-results

      - name: Baixar resultados do Allure - Contrato
        uses: actions/download-artifact@v4
        with:
          name: allure-results-contrato
          path: target/allure-results

      - name: Baixar resultados do Allure - Funcional
        uses: actions/download-artifact@v4
        with:
          name: allure-results-funcional
          path: target/allure-results


      - name: Gerar e publicar Allure Report
        uses: simple-elf/allure-report-action@master
        with:
          allure_results: target/allure-results
          allure_history: allure-history

      - name: Deploy no GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: allure-history

  code-ql-analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: read

    strategy:
      fail-fast: false
      matrix:
        language: ['java']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Init CodeQL
      uses: github/codeql-action/init@v3
      with:
        language: ${{matrix.language}}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"
  notify-discord:
    runs-on: ubuntu-latest
    needs: generate-allure-report
    if: always()
    steps:
      - name: Notificar sucesso no Discord
        if: success()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{"username": "GitHub Actions", "content": "‚úÖ Testes conclu√≠dos com sucesso!\nüîó [Ver relat√≥rio do Allure](https://lucaslarry.github.io/github-actions-grupo06)"}' \
               $DISCORD_WEBHOOK

      - name: Notificar falha no Discord
        if: failure()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{"username": "GitHub Actions", "content": "‚ùå Testes falharam! Verifique os logs no GitHub Actions.üîó [Ver relat√≥rio do Allure](https://lucaslarry.github.io/github-actions-grupo06)"}' \
               $DISCORD_WEBHOOK


