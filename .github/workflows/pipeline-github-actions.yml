name: Pipeline Github Actions

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do codigo
        uses: actions/checkout@v4

      - name: Configurar JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Salvar Build como Artifact
        uses: actions/upload-artifact@v4
        with:
          name: projeto-build
          path: target/

  health-check:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout do codigo
        uses: actions/checkout@v4

      - name: Health Check
        run: mvn test -Dsurefire.suiteXmlFiles=src/test/resources/testes/healthCheck.xml

  contrato:
    runs-on: ubuntu-latest
    needs: health-check

    steps:
      - name: Checkout do codigo
        uses: actions/checkout@v4

      - name: Contrato
        run: mvn test -Dsurefire.suiteXmlFiles=src/test/resources/testes/contrato.xml

  funcional:
    runs-on: ubuntu-latest
    needs: contrato

    steps:
      - name: Checkout do codigo
        uses: actions/checkout@v4

      - name: Funcional
        run: mvn test -Dsurefire.suiteXmlFiles=src/test/resources/testes/funcional.xml

  allure:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Cache Allure
        id: cache-allure
        uses: actions/cache@v3
        with:
          path: allure
          key: allure-2.19.0
          restore-keys: allure-2.19.0

      - name: Instalar Allure
        if: steps.cache-allure.outputs.cache-hit != 'true'
        run: |
          wget https://github.com/allure-framework/allure2/releases/download/2.19.0/allure-2.19.0.zip
          unzip allure-2.19.0.zip -d allure
          echo "$(pwd)/allure/allure-2.19.0/bin" >> $GITHUB_PATH

      - name: Verificar se os resultados do Allure existem
        id: check-allure-results
        run: |
          if [ -d "target/allure-results" ]; then
            echo "::set-output name=exists::true"
          else
            echo "::set-output name=exists::false"
          fi

      - name: Gerar Relatório do Allure
        if: steps.check-allure-results.outputs.exists == 'true'
        run: |
          allure generate target/allure-results --clean -o target/allure-report

      - name: Hospedar o Relatório no GitHub Pages
        if: steps.check-allure-results.outputs.exists == 'true'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: target/allure-report
          destination_dir: allure-report
